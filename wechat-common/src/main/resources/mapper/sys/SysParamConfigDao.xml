<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nuoding.wechat.common.dao.sys.SysParamConfigDao">

    <resultMap type="com.nuoding.wechat.common.entity.sys.SysParamConfigEntity" id="SysParamConfigMap">
        <result property="id" column="ID" jdbcType="INTEGER"/>
        <result property="tenantId" column="tenant_id" jdbcType="VARCHAR"/>
        <result property="configName" column="config_name" jdbcType="VARCHAR"/>
        <result property="configKey" column="config_key" jdbcType="VARCHAR"/>
        <result property="configValue" column="config_value" jdbcType="VARCHAR"/>
        <result property="configDesc" column="config_desc" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="lastUpdateTime" column="last_update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Table_Name">
        sys_param_config
    </sql>

    <sql id="Base_Column_List">
                ID,tenant_id,config_name,config_key,config_value,config_desc,create_time,last_update_time    </sql>

    <!--查询单个-->
    <select id="queryById" resultMap="SysParamConfigMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="SysParamConfigMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        <where>
            <if test="tenantId != null and tenantId !=''">and tenant_id = #{tenantId}</if>
            <if test="configName != null and configName !=''">and config_name = #{configName}</if>
            <if test="configKey != null and configKey !=''">and config_key = #{configKey}</if>
            <if test="configValue != null and configValue !=''">and config_value = #{configValue}</if>
            <if test="configDesc != null and configDesc !=''">and config_desc = #{configDesc}</if>
            <if test="lastUpdateTime != null and lastUpdateTime !=''">and last_update_time = #{lastUpdateTime}</if>
        </where>
    </select>

    <!--查询一条-->
    <select id="selectOne" resultMap="SysParamConfigMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        <where>
            <if test="tenantId != null and tenantId !=''">and tenant_id = #{tenantId}</if>
            <if test="configName != null and configName !=''">and config_name = #{configName}</if>
            <if test="configKey != null and configKey !=''">and config_key = #{configKey}</if>
            <if test="configValue != null and configValue !=''">and config_value = #{configValue}</if>
            <if test="configDesc != null and configDesc !=''">and config_desc = #{configDesc}</if>
            <if test="lastUpdateTime != null and lastUpdateTime !=''">and last_update_time = #{lastUpdateTime}</if>
        </where>
    </select>

    <!--查询指定行数据-->
    <select id="fuzzyQuery" resultMap="SysParamConfigMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        <where>
            <if test="tenantId != null and tenantId !=''">and tenant_id = #{tenantId}</if>
            <if test="configName != null and configName !=''">and config_name like CONCAT(CONCAT('%', #{configName}),
                '%')
            </if>
            <if test="configKey != null and configKey !=''">and config_key like CONCAT(CONCAT('%', #{configKey}), '%')
            </if>
            <if test="configValue != null and configValue !=''">and config_value like CONCAT(CONCAT('%',
                #{configValue}), '%')
            </if>
            <if test="configDesc != null and configDesc !=''">and config_desc like CONCAT(CONCAT('%', #{configDesc}),
                '%')
            </if>
            <if test="lastUpdateTime != null and lastUpdateTime !=''">and last_update_time like CONCAT(CONCAT('%',
                #{lastUpdateTime}), '%')
            </if>
        </where>

    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from
        <include refid="Table_Name"/>
        <where>
            <if test="tenantId != null and tenantId !=''">and tenant_id = #{tenantId}</if>
            <if test="configName != null and configName !=''">and config_name = #{configName}</if>
            <if test="configKey != null and configKey !=''">and config_key = #{configKey}</if>
            <if test="configValue != null and configValue !=''">and config_value = #{configValue}</if>
            <if test="configDesc != null and configDesc !=''">and config_desc = #{configDesc}</if>
            <if test="lastUpdateTime != null and lastUpdateTime !=''">and last_update_time = #{lastUpdateTime}</if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into
        <include refid="Table_Name"/>
        (tenant_id ,config_name ,config_key ,config_value ,config_desc ,last_update_time )
        values
        (#{tenantId},#{configName},#{configKey},#{configValue},#{configDesc},#{lastUpdateTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into
        <include refid="Table_Name"/>
        ( tenant_id ,config_name ,config_key ,config_value ,config_desc ,last_update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            ( #{entity.tenantId} ,#{entity.configName} ,#{entity.configKey} ,#{entity.configValue} ,#{entity.configDesc}
            ,#{entity.lastUpdateTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into
        <include refid="Table_Name"/>
        ( tenant_id ,config_name ,config_key ,config_value ,config_desc ,last_update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.tenantId},#{entity.configName},#{entity.configKey},#{entity.configValue},#{entity.configDesc},#{entity.lastUpdateTime})
        </foreach>
        on duplicate key update
        tenant_id=values(tenant_id) ,config_name=values(config_name) ,config_key=values(config_key)
        ,config_value=values(config_value) ,config_desc=values(config_desc) ,last_update_time=values(last_update_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update
        <include refid="Table_Name"/>
        <set>
            <if test="tenantId != null and tenantId != ''">tenant_id = #{tenantId},</if>
            <if test="configName != null and configName != ''">config_name = #{configName},</if>
            <if test="configKey != null and configKey != ''">config_key = #{configKey},</if>
            <if test="configValue != null and configValue != ''">config_value = #{configValue},</if>
            <if test="configDesc != null and configDesc != ''">config_desc = #{configDesc},</if>
            <if test="lastUpdateTime != null and lastUpdateTime != ''">last_update_time = #{lastUpdateTime},</if>
        </set>
        where id = #{id}
        <if test="tenantId != null and tenantId !=''">and tenant_id = #{tenantId}</if>
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from
        <include refid="Table_Name"/>
        where id = #{id}
        <if test="tenantId != null and tenantId !=''">and tenant_id = #{tenantId}</if>
    </delete>

</mapper>

