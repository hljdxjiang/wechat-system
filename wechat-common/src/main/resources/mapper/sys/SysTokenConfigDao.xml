<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nuoding.wechat.common.dao.sys.SysTokenConfigDao">

    <resultMap type="com.nuoding.wechat.common.entity.sys.SysTokenConfigEntity" id="SysTokenConfigMap">
        <result property="id" column="ID" jdbcType="INTEGER"/>
        <result property="tenantId" column="tenant_id" jdbcType="VARCHAR"/>
        <result property="appid" column="appid" jdbcType="VARCHAR"/>
        <result property="tokenKey" column="token_key" jdbcType="VARCHAR"/>
        <result property="tokenDesc" column="token_desc" jdbcType="VARCHAR"/>
        <result property="tokenVaildType" column="token_vaild_type" jdbcType="VARCHAR"/>
        <result property="tokenValidTime" column="token_valid_time" jdbcType="INTEGER"/>
        <result property="tokenStatus" column="token_status" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="lastUpdateTime" column="last_update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Table_Name">
        sys_token_config
    </sql>

    <sql id="Base_Column_List">
                ID,tenant_id,appid,token_key,token_desc,token_vaild_type,token_valid_time,token_status,create_time,last_update_time    </sql>

    <!--查询单个-->
    <select id="queryById" resultMap="SysTokenConfigMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="SysTokenConfigMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        <where>
            <if test="tenantId != null and tenantId !=''">and tenant_id =
                #{tenantId}
            </if>
            <if test="appid != null and appid !=''">and appid =
                #{appid}
            </if>
            <if test="tokenKey != null and tokenKey !=''">and token_key =
                #{tokenKey}
            </if>
            <if test="tokenDesc != null and tokenDesc !=''">and token_desc =
                #{tokenDesc}
            </if>
            <if test="tokenVaildType != null and tokenVaildType !=''">and token_vaild_type =
                #{tokenVaildType}
            </if>
            <if test="tokenValidTime != null and tokenValidTime !=''">and token_valid_time =
                #{tokenValidTime}
            </if>
            <if test="tokenStatus != null and tokenStatus !=''">and token_status =
                #{tokenStatus}
            </if>
            <if test="lastUpdateTime != null and lastUpdateTime !=''">and last_update_time =
                #{lastUpdateTime}
            </if>
        </where>
    </select>

    <!--查询一条-->
    <select id="selectOne" resultMap="SysTokenConfigMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        <where>
            <if test="tenantId != null and tenantId !=''">and tenant_id =
                #{tenantId}
            </if>
            <if test="appid != null and appid !=''">and appid =
                #{appid}
            </if>
            <if test="tokenKey != null and tokenKey !=''">and token_key =
                #{tokenKey}
            </if>
            <if test="tokenDesc != null and tokenDesc !=''">and token_desc =
                #{tokenDesc}
            </if>
            <if test="tokenVaildType != null and tokenVaildType !=''">and token_vaild_type =
                #{tokenVaildType}
            </if>
            <if test="tokenValidTime != null and tokenValidTime !=''">and token_valid_time =
                #{tokenValidTime}
            </if>
            <if test="tokenStatus != null and tokenStatus !=''">and token_status =
                #{tokenStatus}
            </if>
            <if test="lastUpdateTime != null and lastUpdateTime !=''">and last_update_time =
                #{lastUpdateTime}
            </if>
        </where>
    </select>

    <!--查询指定行数据-->
    <select id="fuzzyQuery" resultMap="SysTokenConfigMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        <where>
            <if test="tenantId != null and tenantId !=''">and tenant_id =
                #{tenantId}
            </if>
            <if test="appid != null and appid !=''">and appid like
                CONCAT(CONCAT('%', #{appid}), '%')
            </if>
            <if test="tokenKey != null and tokenKey !=''">and token_key like
                CONCAT(CONCAT('%', #{tokenKey}), '%')
            </if>
            <if test="tokenDesc != null and tokenDesc !=''">and token_desc like
                CONCAT(CONCAT('%', #{tokenDesc}), '%')
            </if>
            <if test="tokenVaildType != null and tokenVaildType !=''">and token_vaild_type like
                CONCAT(CONCAT('%', #{tokenVaildType}), '%')
            </if>
            <if test="tokenValidTime != null and tokenValidTime !=''">and token_valid_time like
                CONCAT(CONCAT('%', #{tokenValidTime}), '%')
            </if>
            <if test="tokenStatus != null and tokenStatus !=''">and token_status like
                CONCAT(CONCAT('%', #{tokenStatus}), '%')
            </if>
            <if test="lastUpdateTime != null and lastUpdateTime !=''">and last_update_time like
                CONCAT(CONCAT('%', #{lastUpdateTime}), '%')
            </if>
        </where>

    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from
        <include refid="Table_Name"/>
        <where>
            <if test="tenantId != null and tenantId !=''">and tenant_id =
                #{tenantId}
            </if>
            <if test="appid != null and appid !=''">and appid =
                #{appid}
            </if>
            <if test="tokenKey != null and tokenKey !=''">and token_key =
                #{tokenKey}
            </if>
            <if test="tokenDesc != null and tokenDesc !=''">and token_desc =
                #{tokenDesc}
            </if>
            <if test="tokenVaildType != null and tokenVaildType !=''">and token_vaild_type =
                #{tokenVaildType}
            </if>
            <if test="tokenValidTime != null and tokenValidTime !=''">and token_valid_time =
                #{tokenValidTime}
            </if>
            <if test="tokenStatus != null and tokenStatus !=''">and token_status =
                #{tokenStatus}
            </if>
            <if test="lastUpdateTime != null and lastUpdateTime !=''">and last_update_time =
                #{lastUpdateTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into
        <include refid="Table_Name"/>
        (tenant_id ,appid ,token_key ,token_desc ,token_vaild_type ,token_valid_time ,token_status ,last_update_time )
        values
        (#{tenantId} ,#{appid} ,#{tokenKey} ,#{tokenDesc} ,#{tokenVaildType} ,#{tokenValidTime} ,#{tokenStatus}
        ,#{lastUpdateTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into
        <include refid="Table_Name"/>
        ( tenant_id ,appid ,token_key ,token_desc ,token_vaild_type ,token_valid_time ,token_status ,last_update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            ( #{entity.tenantId} ,#{entity.appid} ,#{entity.tokenKey} ,#{entity.tokenDesc} ,#{entity.tokenVaildType}
            ,#{entity.tokenValidTime} ,#{entity.tokenStatus} ,#{entity.lastUpdateTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into
        <include refid="Table_Name"/>
        ( tenant_id ,appid ,token_key ,token_desc ,token_vaild_type ,token_valid_time ,token_status ,last_update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            ( #{entity.tenantId}, #{entity.appid}, #{entity.tokenKey}, #{entity.tokenDesc}, #{entity.tokenVaildType},
            #{entity.tokenValidTime}, #{entity.tokenStatus}, #{entity.lastUpdateTime})
        </foreach>
        on duplicate key update
        tenant_id
        =values(tenant_id) ,appid
        =values(appid) ,token_key
        =values(token_key) ,token_desc
        =values(token_desc) ,token_vaild_type
        =values(token_vaild_type) ,token_valid_time
        =values(token_valid_time) ,token_status
        =values(token_status) ,last_update_time
        =values(last_update_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update
        <include refid="Table_Name"/>
        <set>
            <if test="tenantId != null and tenantId != ''">tenant_id = #{tenantId
                    },
            </if>
            <if test="appid != null and appid != ''">appid = #{appid
                    },
            </if>
            <if test="tokenKey != null and tokenKey != ''">token_key = #{tokenKey
                    },
            </if>
            <if test="tokenDesc != null and tokenDesc != ''">token_desc = #{tokenDesc
                    },
            </if>
            <if test="tokenVaildType != null and tokenVaildType != ''">token_vaild_type = #{tokenVaildType
                    },
            </if>
            <if test="tokenValidTime != null and tokenValidTime != ''">token_valid_time = #{tokenValidTime
                    },
            </if>
            <if test="tokenStatus != null and tokenStatus != ''">token_status = #{tokenStatus
                    },
            </if>
            <if test="lastUpdateTime != null and lastUpdateTime != ''">last_update_time = #{lastUpdateTime
                    },
            </if>
        </set>
        where id = #{id}
        <if test="tenantId != null and tenantId !=''">and tenant_id = #{tenantId}</if>
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from
        <include refid="Table_Name"/>
        where id = #{id}
    </delete>

</mapper>

