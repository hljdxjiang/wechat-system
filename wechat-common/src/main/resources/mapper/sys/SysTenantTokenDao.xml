<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nuoding.wechat.common.dao.sys.SysTenantTokenDao">

    <resultMap type="com.nuoding.wechat.common.entity.sys.SysTenantTokenEntity" id="SysTenantTokenMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="tenantId" column="tenant_id" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="authType" column="auth_type" jdbcType="VARCHAR"/>
        <result property="appid" column="appid" jdbcType="VARCHAR"/>
        <result property="appSecret" column="app_secret" jdbcType="VARCHAR"/>
        <result property="channel" column="channel" jdbcType="VARCHAR"/>
        <result property="token" column="token" jdbcType="VARCHAR"/>
        <result property="refreshToken" column="refresh_token" jdbcType="VARCHAR"/>
        <result property="echostr" column="echostr" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="lastModifiedTime" column="last_modified_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Table_Name">
        sys_tenant_token
    </sql>

    <sql id="Base_Column_List">
                id,tenant_id,status,auth_type,appid,app_secret,channel,token,refresh_token,echostr,create_time,last_modified_time    </sql>

    <!--查询单个-->
    <select id="queryById" resultMap="SysTenantTokenMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="SysTenantTokenMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        <where>
            <if test="tenantId != null and tenantId !=''">and tenant_id =
                #{tenantId}
            </if>
            <if test="status != null and status !=''">and status =
                #{status}
            </if>
            <if test="authType != null and authType !=''">and auth_type =
                #{authType}
            </if>
            <if test="appid != null and appid !=''">and appid =
                #{appid}
            </if>
            <if test="appSecret != null and appSecret !=''">and app_secret =
                #{appSecret}
            </if>
            <if test="channel != null and channel !=''">and channel =
                #{channel}
            </if>
            <if test="token != null and token !=''">and token =
                #{token}
            </if>
            <if test="refreshToken != null and refreshToken !=''">and refresh_token =
                #{refreshToken}
            </if>
            <if test="echostr != null and echostr !=''">and echostr =
                #{echostr}
            </if>
        </where>
    </select>

    <!--查询一条-->
    <select id="selectOne" resultMap="SysTenantTokenMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        <where>
            <if test="tenantId != null and tenantId !=''">and tenant_id =
                #{tenantId}
            </if>
            <if test="status != null and status !=''">and status =
                #{status}
            </if>
            <if test="authType != null and authType !=''">and auth_type =
                #{authType}
            </if>
            <if test="appid != null and appid !=''">and appid =
                #{appid}
            </if>
            <if test="appSecret != null and appSecret !=''">and app_secret =
                #{appSecret}
            </if>
            <if test="channel != null and channel !=''">and channel =
                #{channel}
            </if>
            <if test="token != null and token !=''">and token =
                #{token}
            </if>
            <if test="refreshToken != null and refreshToken !=''">and refresh_token =
                #{refreshToken}
            </if>
            <if test="echostr != null and echostr !=''">and echostr =
                #{echostr}
            </if>
        </where>
    </select>

    <!--查询指定行数据-->
    <select id="fuzzyQuery" resultMap="SysTenantTokenMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="Table_Name"/>
        <where>
            <if test="tenantId != null and tenantId !=''">and tenant_id =
                #{tenantId}
            </if>
            <if test="status != null and status !=''">and status like
                CONCAT(CONCAT('%', #{status}), '%')
            </if>
            <if test="authType != null and authType !=''">and auth_type like
                CONCAT(CONCAT('%', #{authType}), '%')
            </if>
            <if test="appid != null and appid !=''">and appid like
                CONCAT(CONCAT('%', #{appid}), '%')
            </if>
            <if test="appSecret != null and appSecret !=''">and app_secret like
                CONCAT(CONCAT('%', #{appSecret}), '%')
            </if>
            <if test="channel != null and channel !=''">and channel like
                CONCAT(CONCAT('%', #{channel}), '%')
            </if>
            <if test="token != null and token !=''">and token like
                CONCAT(CONCAT('%', #{token}), '%')
            </if>
            <if test="refreshToken != null and refreshToken !=''">and refresh_token like
                CONCAT(CONCAT('%', #{refreshToken}), '%')
            </if>
            <if test="echostr != null and echostr !=''">and echostr like
                CONCAT(CONCAT('%', #{echostr}), '%')
            </if>
        </where>

    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from
        <include refid="Table_Name"/>
        <where>
            <if test="tenantId != null and tenantId !=''">and tenant_id =
                #{tenantId}
            </if>
            <if test="status != null and status !=''">and status =
                #{status}
            </if>
            <if test="authType != null and authType !=''">and auth_type =
                #{authType}
            </if>
            <if test="appid != null and appid !=''">and appid =
                #{appid}
            </if>
            <if test="appSecret != null and appSecret !=''">and app_secret =
                #{appSecret}
            </if>
            <if test="channel != null and channel !=''">and channel =
                #{channel}
            </if>
            <if test="token != null and token !=''">and token =
                #{token}
            </if>
            <if test="refreshToken != null and refreshToken !=''">and refresh_token =
                #{refreshToken}
            </if>
            <if test="echostr != null and echostr !=''">and echostr =
                #{echostr}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into
        <include refid="Table_Name"/>
        (tenant_id ,auth_type ,appid ,app_secret ,channel ,token ,refresh_token ,echostr )
        values
        (#{tenantId} ,#{authType} ,#{appid} ,#{appSecret} ,#{channel} ,#{token} ,#{refreshToken} ,#{echostr})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into
        <include refid="Table_Name"/>
        ( tenant_id ,auth_type ,appid ,app_secret ,channel ,token ,refresh_token ,echostr)
        values
        <foreach collection="entities" item="entity" separator=",">
            ( #{entity.tenantId} ,#{entity.authType} ,#{entity.appid} ,#{entity.appSecret} ,#{entity.channel}
            ,#{entity.token} ,#{entity.refreshToken} ,#{entity.echostr})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into
        <include refid="Table_Name"/>
        ( tenant_id ,status ,auth_type ,appid ,app_secret ,channel ,token ,refresh_token ,echostr)
        values
        <foreach collection="entities" item="entity" separator=",">
            ( #{entity.tenantId}, #{entity.status}, #{entity.authType}, #{entity.appid}, #{entity.appSecret},
            #{entity.channel}, #{entity.token}, #{entity.refreshToken}, #{entity.echostr})
        </foreach>
        on duplicate key update
        tenant_id
        =values(tenant_id) ,status
        =values(status) ,auth_type
        =values(auth_type) ,appid
        =values(appid) ,app_secret
        =values(app_secret) ,channel
        =values(channel) ,token
        =values(token) ,refresh_token
        =values(refresh_token) ,echostr
        =values(echostr)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update
        <include refid="Table_Name"/>
        <set>
            <if test="tenantId != null and tenantId != ''">tenant_id = #{tenantId
                    },
            </if>
            <if test="status != null and status != ''">status = #{status
                    },
            </if>
            <if test="authType != null and authType != ''">auth_type = #{authType
                    },
            </if>
            <if test="appid != null and appid != ''">appid = #{appid
                    },
            </if>
            <if test="appSecret != null and appSecret != ''">app_secret = #{appSecret
                    },
            </if>
            <if test="channel != null and channel != ''">channel = #{channel
                    },
            </if>
            <if test="token != null and token != ''">token = #{token
                    },
            </if>
            <if test="refreshToken != null and refreshToken != ''">refresh_token = #{refreshToken
                    },
            </if>
            <if test="echostr != null and echostr != ''">echostr = #{echostr
                    },
            </if>
        </set>
        where id = #{id}
        <if test="tenantId != null and tenantId !=''">and tenant_id = #{tenantId}</if>
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from
        <include refid="Table_Name"/>
        where id = #{id}
    </delete>

</mapper>

