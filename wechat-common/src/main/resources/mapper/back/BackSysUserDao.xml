<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nuoding.wechat.common.dao.BackSysUserDao">

    <resultMap type="com.nuoding.wechat.common.entity.BackSysUser" id="BackSysUserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="tenantId" column="tenant_id" jdbcType="VARCHAR"/>
        <result property="userId" column="user_id" jdbcType="VARCHAR"/>
        <result property="passwd" column="passwd" jdbcType="VARCHAR"/>
        <result property="groupId" column="group_id" jdbcType="VARCHAR"/>
        <result property="roleId" column="role_id" jdbcType="VARCHAR"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="mobileNo" column="mobile_no" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="idNo" column="id_no" jdbcType="VARCHAR"/>
        <result property="idType" column="id_type" jdbcType="VARCHAR"/>
        <result property="oauthCode" column="oauth_code" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="lastModifiedTime" column="last_modified_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BackSysUserMap">
        select
          id, tenant_id, user_id, passwd, group_id, role_id, user_name, mobile_no, email, id_no, id_type, oauth_code, remark, status, create_time, last_modified_time
        from back_sys_user
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BackSysUserMap">
        select
        id, tenant_id, user_id, passwd, group_id, role_id, user_name, mobile_no, email, id_no, id_type, oauth_code,
        remark, status, create_time, last_modified_time
        from back_sys_user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="tenantId != null and tenantId != ''">
                and tenant_id = #{tenantId}
            </if>
            <if test="userId != null and userId != ''">
                and user_id = #{userId}
            </if>
            <if test="passwd != null and passwd != ''">
                and passwd = #{passwd}
            </if>
            <if test="groupId != null and groupId != ''">
                and group_id = #{groupId}
            </if>
            <if test="roleId != null and roleId != ''">
                and role_id = #{roleId}
            </if>
            <if test="userName != null and userName != ''">
                and user_name = #{userName}
            </if>
            <if test="mobileNo != null and mobileNo != ''">
                and mobile_no = #{mobileNo}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="idNo != null and idNo != ''">
                and id_no = #{idNo}
            </if>
            <if test="idType != null and idType != ''">
                and id_type = #{idType}
            </if>
            <if test="oauthCode != null and oauthCode != ''">
                and oauth_code = #{oauthCode}
            </if>
            <if test="remark != null and remark != ''">
                and remark = #{remark}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="lastModifiedTime != null">
                and last_modified_time = #{lastModifiedTime}
            </if>
        </where>

    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from back_sys_user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="tenantId != null and tenantId != ''">
                and tenant_id = #{tenantId}
            </if>
            <if test="userId != null and userId != ''">
                and user_id = #{userId}
            </if>
            <if test="passwd != null and passwd != ''">
                and passwd = #{passwd}
            </if>
            <if test="groupId != null and groupId != ''">
                and group_id = #{groupId}
            </if>
            <if test="roleId != null and roleId != ''">
                and role_id = #{roleId}
            </if>
            <if test="userName != null and userName != ''">
                and user_name = #{userName}
            </if>
            <if test="mobileNo != null and mobileNo != ''">
                and mobile_no = #{mobileNo}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="idNo != null and idNo != ''">
                and id_no = #{idNo}
            </if>
            <if test="idType != null and idType != ''">
                and id_type = #{idType}
            </if>
            <if test="oauthCode != null and oauthCode != ''">
                and oauth_code = #{oauthCode}
            </if>
            <if test="remark != null and remark != ''">
                and remark = #{remark}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="lastModifiedTime != null">
                and last_modified_time = #{lastModifiedTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into back_sys_user(tenant_id, user_id, passwd, group_id, role_id, user_name, mobile_no, email, id_no, id_type, oauth_code, remark, status, create_time, last_modified_time)
        values (#{tenantId}, #{userId}, #{passwd}, #{groupId}, #{roleId}, #{userName}, #{mobileNo}, #{email}, #{idNo}, #{idType}, #{oauthCode}, #{remark}, #{status}, #{createTime}, #{lastModifiedTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into back_sys_user(tenant_id, user_id, passwd, group_id, role_id, user_name, mobile_no, email, id_no,
        id_type, oauth_code, remark, status, create_time, last_modified_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.tenantId}, #{entity.userId}, #{entity.passwd}, #{entity.groupId}, #{entity.roleId},
            #{entity.userName}, #{entity.mobileNo}, #{entity.email}, #{entity.idNo}, #{entity.idType},
            #{entity.oauthCode}, #{entity.remark}, #{entity.status}, #{entity.createTime}, #{entity.lastModifiedTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into back_sys_user(tenant_id, user_id, passwd, group_id, role_id, user_name, mobile_no, email, id_no,
        id_type, oauth_code, remark, status, create_time, last_modified_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.tenantId}, #{entity.userId}, #{entity.passwd}, #{entity.groupId}, #{entity.roleId},
            #{entity.userName}, #{entity.mobileNo}, #{entity.email}, #{entity.idNo}, #{entity.idType},
            #{entity.oauthCode}, #{entity.remark}, #{entity.status}, #{entity.createTime}, #{entity.lastModifiedTime})
        </foreach>
        on duplicate key update
        tenant_id = values(tenant_id),
        user_id = values(user_id),
        passwd = values(passwd),
        group_id = values(group_id),
        role_id = values(role_id),
        user_name = values(user_name),
        mobile_no = values(mobile_no),
        email = values(email),
        id_no = values(id_no),
        id_type = values(id_type),
        oauth_code = values(oauth_code),
        remark = values(remark),
        status = values(status),
        create_time = values(create_time),
        last_modified_time = values(last_modified_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update back_sys_user
        <set>
            <if test="tenantId != null and tenantId != ''">
                tenant_id = #{tenantId},
            </if>
            <if test="userId != null and userId != ''">
                user_id = #{userId},
            </if>
            <if test="passwd != null and passwd != ''">
                passwd = #{passwd},
            </if>
            <if test="groupId != null and groupId != ''">
                group_id = #{groupId},
            </if>
            <if test="roleId != null and roleId != ''">
                role_id = #{roleId},
            </if>
            <if test="userName != null and userName != ''">
                user_name = #{userName},
            </if>
            <if test="mobileNo != null and mobileNo != ''">
                mobile_no = #{mobileNo},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="idNo != null and idNo != ''">
                id_no = #{idNo},
            </if>
            <if test="idType != null and idType != ''">
                id_type = #{idType},
            </if>
            <if test="oauthCode != null and oauthCode != ''">
                oauth_code = #{oauthCode},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="lastModifiedTime != null">
                last_modified_time = #{lastModifiedTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from back_sys_user where id = #{id}
    </delete>

</mapper>

